{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/site1",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },

    "location": {
      "type": "string",
      "defaultValue": "South Central US",
      "metadata": {
        "description": "Deployment location. (example: USGov Virginia)"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg_vnet_services_w1"
    },
    "SubID": {
      "type": "string",
      "metadata": { "description": "The Subscrition ID" }
    },
    "peerRGNamegw100": {
      "type": "string",
      "defaultValue": "rg_vnet_net1_dc1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },

    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "AzureFoundation VNET Name for virtual data center subscription in a specific data center." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.56.0/21",
      "metadata": { "description": "AzureFoundation VNET Address Prefix, the range of addresses for a specific data center." }
    },
    "GatewayName": {
      "type": "string",
      "defaultValue": "gw_Services_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "VPNType": {
      "type": "string",
      "defaultValue": "RouteBased",
      "allowedValues": [ "RouteBased", "PolicyBased" ],
      "metadata": { "description": "The type of VPN connection Route or Policy based." }
    },
    "PublicIPName": {
      "type": "string",
      "defaultValue": "gwpip_Services_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "gatewaySKU": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard", "HighPerformance" ],
      "metadata": { "description": "Gateway SKU, the type of gateway Basic, Standard, High Performance" }
    },
    "GatewayType": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": { "description": "The type of gateway that is being created.  This can be either StaticRouting or DynamicRouting." }
    },
    "erCircuitName": {
      "type": "String",
      "defaultValue": "SLGa_Services_ER",
      "metadata": { "description": "The name of the ER Circuit" }
    },
    "erSKUTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Standard", "Premium" ],
      "metadata": { "description": "Chosen SKU Tier of ExpressRoute circuit. Choose from Premium or Standard SKU tiers." }
    },
    "erSKUFamily": {
      "type": "string",
      "defaultValue": "MeteredData",
      "allowedValues": [ "MeteredData", "UnlimitedData" ],
      "metadata": { "description": "Chosen SKU family of ExpressRoute circuit. Choose from MeteredData or UnlimitedData SKU families." }
    },
    "erBandwidth": {
      "type": "int",
      "metadata": { "description": "This is the bandwidth in Mbps of the circuit being created. It must exactly match one of the available bandwidth offers List ExpressRoute Service Providers API call." }
    },
    "erSPName": {
      "type": "string",
      "metadata": { "description": "ExpressRoute Service Provider Name" }
    },
    "erPeeringLocation": {
      "type": "string",
      "metadata": { "description": "The ExpressRoute Peering Location." }
    },
    "BGP": {
      "type": "bool",
      "metadata": { "description": "Will the gateway use BGP routing?" }
    },
    "ConnectionNamecnct140": {
      "type": "string",
      "defaultValue": "IPSec_SLGa_Services_To_Net1_DC1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct140": {
      "type": "string",
      "defaultValue": "Net1_DC1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct140": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct140": {
      "type": "array",
      "defaultValue": [ "10.0.0.0/16", "10.1.0.0/16", "10.2.0.0/16", "10.3.0.0/16" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct140": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct140": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct140": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "ConnectionNamecnct141": {
      "type": "string",
      "defaultValue": "Vnet2Vnet_SLGa_Services_To_Services_W2",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct141": {
      "type": "string",
      "defaultValue": "Services_W2",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "remoteGWNamecnct141": {
      "type": "string",
      "defaultValue": "gw_Services_W2",
      "metadata": { "description": "Name for the remote VNET for a VNET to VNET connection" }
    },
    "localGWIPcnct141": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct141": {
      "type": "array",
      "defaultValue": [ "10.128.120.0/21" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct141": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct141": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct141": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct141": {
      "type": "string",
      "defaultValue": "730f26b5-ebf5-4518-999f-0b4eb0cdc8f9",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct141": {
      "type": "string",
      "defaultValue": "rg_vnet_services_w2",
      "metadata": { "description": "The resource group for the remote subscriptions VNET gateway." }
    },
    "ConnectionNamecnct142": {
      "type": "string",
      "defaultValue": "Peering_SLGa_Services_To_HBI_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct142": {
      "type": "string",
      "defaultValue": "HBI_W1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct142": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct142": {
      "type": "array",
      "defaultValue": [ "10.128.0.0/20" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct142": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct142": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct142": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowVNETAccesscnct142": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct142": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct142": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct142": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct142": {
      "type": "string",
      "defaultValue": "vnet_hbi_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct142": {
      "type": "string",
      "defaultValue": "ce38c0ef-22f5-458d-b1f7-e3890e2471f2",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct142": {
      "type": "string",
      "defaultValue": "rg_vnet_hbi_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "ConnectionNamecnct143": {
      "type": "string",
      "defaultValue": "Peering_SLGa_Services_To_PreProd_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct143": {
      "type": "string",
      "defaultValue": "PreProd_W1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct143": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct143": {
      "type": "array",
      "defaultValue": [ "10.0.0.0/16", "10.1.0.0/16", "10.2.0.0/16", "10.3.0.0/16" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct143": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct143": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct143": {
      "type": "int",
      "defaultValue": 50,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowVNETAccesscnct143": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct143": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct143": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct143": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct143": {
      "type": "string",
      "defaultValue": "vnet_preprod_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct143": {
      "type": "string",
      "defaultValue": "a7d928df-fc97-4f02-adae-3d7cdeb7c8cb",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct143": {
      "type": "string",
      "defaultValue": "rg_vnet_preprod_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "ConnectionNamecnct144": {
      "type": "string",
      "defaultValue": "Peering_SLGa_Services_To_Prod_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct144": {
      "type": "string",
      "defaultValue": "Prod_W1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct144": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct144": {
      "type": "array",
      "defaultValue": [ "10.128.32.0/20" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct144": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct144": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct144": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowVNETAccesscnct144": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct144": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct144": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct144": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct144": {
      "type": "string",
      "defaultValue": "vnet_prod_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct144": {
      "type": "string",
      "defaultValue": "ec1cea2e-92aa-45a7-89b0-d9fc40df2beb",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct144": {
      "type": "string",
      "defaultValue": "rg_vnet_prod_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "ConnectionNamecnct145": {
      "type": "string",
      "defaultValue": "Peering_SLGa_Services_To_Storage_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalNamecnct145": {
      "type": "string",
      "defaultValue": "Storage_W1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct145": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct145": {
      "type": "array",
      "defaultValue": [ "10.128.48.0/21" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct145": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct145": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct145": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowVNETAccesscnct145": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct145": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct145": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct145": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct145": {
      "type": "string",
      "defaultValue": "vnet_storage_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct145": {
      "type": "string",
      "defaultValue": "6e5d19d2-a324-470a-b24f-57ac0d3221a1",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct145": {
      "type": "string",
      "defaultValue": "rg_vnet_storage_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },



    "subnet600Prefix": {
      "type": "string",
      "defaultValue": "10.128.56.0/24",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600Name": {
      "type": "string",
      "defaultValue": "600_Services_Srvcs_SLGa_W1",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.84",
      "metadata": { "description": "UDR: Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600NSG": {
      "type": "string",
      "defaultValue": "600_NSG_Services",
      "metadata": { "description": "NSG: Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600UDR": {
      "type": "string",
      "defaultValue": "600_UDR_Services",
      "metadata": { "description": "UDR: Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet625Prefix": {
      "type": "string",
      "defaultValue": "10.128.58.0/25",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625Name": {
      "type": "string",
      "defaultValue": "625_LB_Services_Srvcs_SLGa_W1",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.132",
      "metadata": { "description": "UDR: Loadbalanced Services (internal) systems" }
    },
    "subnet625NSG": {
      "type": "string",
      "defaultValue": "625_NSG_LB_Services",
      "metadata": { "description": "NSG: Loadbalanced Services (internal) systems" }
    },
    "subnet625UDR": {
      "type": "string",
      "defaultValue": "625_UDR_LB_Services",
      "metadata": { "description": "UDR: Loadbalanced Services (internal) systems" }
    },
    "subnet650Prefix": {
      "type": "string",
      "defaultValue": "10.128.60.0/25",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650Name": {
      "type": "string",
      "defaultValue": "650_DMZ_Srvcs_SLGa_W1",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.164",
      "metadata": { "description": "UDR: Internet EndPoint Machines" }
    },
    "subnet650NSG": {
      "type": "string",
      "defaultValue": "650_NSG_DMZ",
      "metadata": { "description": "NSG: Internet EndPoint Machines" }
    },
    "subnet650UDR": {
      "type": "string",
      "defaultValue": "650_UDR_DMZ",
      "metadata": { "description": "UDR: Internet EndPoint Machines" }
    },
    "subnet655Prefix": {
      "type": "string",
      "defaultValue": "10.128.61.0/25",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655Name": {
      "type": "string",
      "defaultValue": "655_LB_DMZ_Srvcs_SLGa_W1",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.212",
      "metadata": { "description": "UDR: Loadbalanced Services DMZ systems" }
    },
    "subnet655NSG": {
      "type": "string",
      "defaultValue": "655_NSG_LB_DMZ",
      "metadata": { "description": "NSG: Loadbalanced Services DMZ systems" }
    },
    "subnet655UDR": {
      "type": "string",
      "defaultValue": "655_UDR_LB_DMZ",
      "metadata": { "description": "UDR: Loadbalanced Services DMZ systems" }
    },
    "subnet660Prefix": {
      "type": "string",
      "defaultValue": "10.128.62.0/26",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660Name": {
      "type": "string",
      "defaultValue": "660_User_Tier0_Srvcs_SLGa_W1",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.84",
      "metadata": { "description": "UDR: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660NSG": {
      "type": "string",
      "defaultValue": "660_NSG_User_Tier0",
      "metadata": { "description": "NSG: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660UDR": {
      "type": "string",
      "defaultValue": "660_UDR_User_Tier0",
      "metadata": { "description": "UDR: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet661Prefix": {
      "type": "string",
      "defaultValue": "10.128.62.64/26",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661Name": {
      "type": "string",
      "defaultValue": "661_User_Tier1_Srvcs_SLGa_W1",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.84",
      "metadata": { "description": "UDR: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661NSG": {
      "type": "string",
      "defaultValue": "661_NSG_User_Tier1",
      "metadata": { "description": "NSG: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661UDR": {
      "type": "string",
      "defaultValue": "661_UDR_User_Tier1",
      "metadata": { "description": "UDR: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet680Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.0/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680Name": {
      "type": "string",
      "defaultValue": "680_CSR_InsideTest_Srvcs_SLGa_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680VNIP": {
      "type": "string",
      "defaultValue": "10.128.191.4",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680NSG": {
      "type": "string",
      "defaultValue": "680_NSG_CSR_InsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680UDR": {
      "type": "string",
      "defaultValue": "680_UDR_CSR_InsideTest",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.32/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681Name": {
      "type": "string",
      "defaultValue": "681_CSR_OutsideTest_Srvcs_SLGa_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681VNIP": {
      "type": "string",
      "defaultValue": "10.128.191.20",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681NSG": {
      "type": "string",
      "defaultValue": "681_NSG_CSR_OutsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681UDR": {
      "type": "string",
      "defaultValue": "681_UDR_CSR_OutsideTest",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.16/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682Name": {
      "type": "string",
      "defaultValue": "682_FW_IntTest_Srvcs_SLGa_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.84",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682NSG": {
      "type": "string",
      "defaultValue": "682_NSG_FW_IntTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682UDR": {
      "type": "string",
      "defaultValue": "682_UDR_FW_IntTest",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.48/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683Name": {
      "type": "string",
      "defaultValue": "683_FW_ExtTest_Srvcs_SLGa_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.164",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683NSG": {
      "type": "string",
      "defaultValue": "683_NSG_FW_ExtTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683UDR": {
      "type": "string",
      "defaultValue": "683_UDR_FW_ExtTest",
      "metadata": { "description": "UDR: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet700Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.0/28",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700Name": {
      "type": "string",
      "defaultValue": "700_CSR_In_Srvcs_SLGa_W1",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.4",
      "metadata": { "description": "UDR: Subnet for CSR for Inside interface" }
    },
    "subnet700NSG": {
      "type": "string",
      "defaultValue": "700_NSG_CSR_In",
      "metadata": { "description": "NSG: Subnet for CSR for Inside interface" }
    },
    "subnet700UDR": {
      "type": "string",
      "defaultValue": "700_UDR_CSR_In",
      "metadata": { "description": "UDR: Subnet for CSR for Inside interface" }
    },
    "subnet701Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.16/28",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701Name": {
      "type": "string",
      "defaultValue": "701_CSR_Out_Srvcs_SLGa_W1",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.20",
      "metadata": { "description": "UDR: Subnet for CSR for Outside" }
    },
    "subnet701NSG": {
      "type": "string",
      "defaultValue": "701_NSG_CSR_Out",
      "metadata": { "description": "NSG: Subnet for CSR for Outside" }
    },
    "subnet701UDR": {
      "type": "string",
      "defaultValue": "701_UDR_CSR_Out",
      "metadata": { "description": "UDR: Subnet for CSR for Outside" }
    },
    "subnet702Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.32/28",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702Name": {
      "type": "string",
      "defaultValue": "702_CSR_Tunnel_Srvcs_SLGa_W1",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.36",
      "metadata": { "description": "UDR: Subnet for the CSR Tunnel" }
    },
    "subnet702NSG": {
      "type": "string",
      "defaultValue": "702_NSG_CSR_Tunnel",
      "metadata": { "description": "NSG: Subnet for the CSR Tunnel" }
    },
    "subnet702UDR": {
      "type": "string",
      "defaultValue": "702_UDR_CSR_Tunnel",
      "metadata": { "description": "UDR: Subnet for the CSR Tunnel" }
    },
    "subnet703Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.48/28",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703Name": {
      "type": "string",
      "defaultValue": "703_CSR_HA_Srvcs_SLGa_W1",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.52",
      "metadata": { "description": "UDR: Failover subnet" }
    },
    "subnet703NSG": {
      "type": "string",
      "defaultValue": "703_NSG_CSR_HA",
      "metadata": { "description": "NSG: Failover subnet" }
    },
    "subnet703UDR": {
      "type": "string",
      "defaultValue": "703_UDR_CSR_HA",
      "metadata": { "description": "UDR: Failover subnet" }
    },
    "subnet710Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.64/28",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710Name": {
      "type": "string",
      "defaultValue": "710_IntASA_Mgnt_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.68",
      "metadata": { "description": "UDR: ASA management interface" }
    },
    "subnet710NSG": {
      "type": "string",
      "defaultValue": "710_NSG_IntASA_Mgnt",
      "metadata": { "description": "NSG: ASA management interface" }
    },
    "subnet710UDR": {
      "type": "string",
      "defaultValue": "710_UDR_IntASA_Mgnt",
      "metadata": { "description": "UDR: ASA management interface" }
    },
    "subnet711Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.80/28",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711Name": {
      "type": "string",
      "defaultValue": "711_IntASA_In_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.84",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet711NSG": {
      "type": "string",
      "defaultValue": "711_NSG_IntASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet711UDR": {
      "type": "string",
      "defaultValue": "711_UDR_IntASA_In",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet712Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.96/28",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712Name": {
      "type": "string",
      "defaultValue": "712_IntASA_Out_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.100",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet712NSG": {
      "type": "string",
      "defaultValue": "712_NSG_IntASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet712UDR": {
      "type": "string",
      "defaultValue": "712_UDR_IntASA_Out",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet713Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.112/28",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713Name": {
      "type": "string",
      "defaultValue": "713_IntASA_DMZ_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.116",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet713NSG": {
      "type": "string",
      "defaultValue": "713_NSG_IntASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet713UDR": {
      "type": "string",
      "defaultValue": "713_UDR_IntASA_DMZ",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet715Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.128/28",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715Name": {
      "type": "string",
      "defaultValue": "715_IntLB_Srvcs_SLGa_W1",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.132",
      "metadata": { "description": "UDR: Internal Loadbalancer virtual appliance" }
    },
    "subnet715NSG": {
      "type": "string",
      "defaultValue": "715_NSG_IntLB",
      "metadata": { "description": "NSG: Internal Loadbalancer virtual appliance" }
    },
    "subnet715UDR": {
      "type": "string",
      "defaultValue": "715_UDR_IntLB",
      "metadata": { "description": "UDR: Internal Loadbalancer virtual appliance" }
    },
    "subnet750Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.144/28",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750Name": {
      "type": "string",
      "defaultValue": "750_ExtASA_Mgnt_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.148",
      "metadata": { "description": "UDR: ASA Management interface" }
    },
    "subnet750NSG": {
      "type": "string",
      "defaultValue": "750_NSG_ExtASA_Mgnt",
      "metadata": { "description": "NSG: ASA Management interface" }
    },
    "subnet750UDR": {
      "type": "string",
      "defaultValue": "750_UDR_ExtASA_Mgnt",
      "metadata": { "description": "UDR: ASA Management interface" }
    },
    "subnet751Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.160/28",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751Name": {
      "type": "string",
      "defaultValue": "751_ExtASA_In_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.164",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet751NSG": {
      "type": "string",
      "defaultValue": "751_NSG_ExtASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet751UDR": {
      "type": "string",
      "defaultValue": "751_UDR_ExtASA_In",
      "metadata": { "description": "UDR: ASA Inside Interface" }
    },
    "subnet752Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.176/28",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752Name": {
      "type": "string",
      "defaultValue": "752_ExtASA_Out_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.180",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet752NSG": {
      "type": "string",
      "defaultValue": "752_NSG_ExtASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet752UDR": {
      "type": "string",
      "defaultValue": "752_UDR_ExtASA_Out",
      "metadata": { "description": "UDR: ASA Outside Interface" }
    },
    "subnet753Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.192/28",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753Name": {
      "type": "string",
      "defaultValue": "753_ExtASA_DMZ_Srvcs_SLGa_W1",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.196",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet753NSG": {
      "type": "string",
      "defaultValue": "753_NSG_ExtASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet753UDR": {
      "type": "string",
      "defaultValue": "753_UDR_ExtASA_DMZ",
      "metadata": { "description": "UDR: ASA DMZ Interface" }
    },
    "subnet755Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.208/28",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755Name": {
      "type": "string",
      "defaultValue": "755_ExtLB_Srvcs_SLGa_W1",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755VNIP": {
      "type": "string",
      "defaultValue": "10.128.63.212",
      "metadata": { "description": "UDR: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755NSG": {
      "type": "string",
      "defaultValue": "755_NSG_ExtLB",
      "metadata": { "description": "NSG: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755UDR": {
      "type": "string",
      "defaultValue": "755_UDR_ExtLB",
      "metadata": { "description": "UDR: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet798Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.224/28",
      "metadata": { "description": "ExpressRoute Termination" }
    },
    "subnet798Name": {
      "type": "string",
      "defaultValue": "798_ER_Srvcs_SLGa_W1",
      "metadata": { "description": "ExpressRoute Termination" }
    },
    "subnet798VNIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "UDR: ExpressRoute Termination" }
    },
    "subnet798NSG": {
      "type": "string",
      "defaultValue": "798_NSG_ER",
      "metadata": { "description": "NSG: ExpressRoute Termination" }
    },
    "subnet798UDR": {
      "type": "string",
      "defaultValue": "798_UDR_ER",
      "metadata": { "description": "UDR: ExpressRoute Termination" }
    },
    "subnet799Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.240/28",
      "metadata": { "description": "The Azure gateway network " }
    },
    "subnet799Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": { "description": "The Azure gateway network " }
    },
    "subnet799VNIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "UDR: The Azure gateway network " }
    },
    "subnet799NSG": {
      "type": "string",
      "defaultValue": "799_NSG_GW",
      "metadata": { "description": "NSG: The Azure gateway network " }
    },
    "subnet799UDR": {
      "type": "string",
      "defaultValue": "799_UDR_GW",
      "metadata": { "description": "UDR: The Azure gateway network " }
    }


  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet799Name'))]",
    "subnet700Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet700Name'))]",
    "subnet701Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet701Name'))]",
    "subnet702Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet702Name'))]",
    "subnet703Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet703Name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet600NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "600_NSG_Services" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet625NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "625_NSG_LB_Services" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet650NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "650_NSG_DMZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet655NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "655_NSG_LB_DMZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet660NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "660_NSG_User_Tier0" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet661NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "661_NSG_User_Tier1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet680NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "680_NSG_CSR_InsideTest" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet681NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "681_NSG_CSR_OutsideTest" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet682NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "682_NSG_CSR_OutsideTest" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet683NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "683_NSG_CSR_OutsideTest" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet700NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "700_NSG_CSR_In" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet701NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "701_NSG_CSR_Out" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet702NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "702_NSG_CSR_Tunnel" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet703NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "703_NSG_CSR_HA" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet710NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "710_NSG_IntASA_Mgnt" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet711NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "711_NSG_IntASA_In" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet712NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "712_NSG_IntASA_Out" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet713NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "713_NSG_IntASA_DMZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet715NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "715_NSG_IntLB" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet750NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "750_NSG_ExtASA_Mgnt" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet751NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "751_NSG_ExtASA_In" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet752NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "752_NSG_ExtASA_Out" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet753NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "753_NSG_ExtASA_DMZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet755NSG')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "755_NSG_ExtLB" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },


    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnetAddressPrefix')]" ] },
        "subnets": [
          {
            "name": "[parameters('subnet600name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet600prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet600NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet625name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet625prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet625NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet650name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet650prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet650NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet655name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet655prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet655NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet660name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet660prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet660NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet661name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet661prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet661NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet680name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet680prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet680NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet681name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet681prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet681NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet682name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet682prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet682NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet683name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet683prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet683NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet700name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet700prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet701name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet701prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet702name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet702prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet703name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet703prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet710name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet710prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet711name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet711prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet712name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet712prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet713name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet713prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet715name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet715prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet750name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet750prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet751name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet751prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet752name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet752prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet753name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet753prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet755name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet755prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet798name')]",
            "properties": { "addressPrefix": "[parameters('subnet798prefix')]" }
          },
          {
            "name": "[parameters('subnet799name')]",
            "properties": { "addressPrefix": "[parameters('subnet799prefix')]" }
          }
        ]
      }
    },




    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('PublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },

    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('GatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/publicIPAddresses/', parameters('PublicIPName'))]", "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('PublicIPName'))]" }
            },
            "name": "[parameters('GatewayName')]"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "[parameters('VPNType')]",
        "enableBGP": "[parameters('BGP')]"
      }
    },

    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('LocalNamecnct140')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('LocalIPPrefixcnct140')]" },
        "gatewayIpAddress": "[parameters('localGWIPcnct140')]"
      }
    },

    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct140')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('LocalNamecnct140'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalNamecnct140'))]" },
        "sharedKey": "[parameters('sharedKeycnct140')]",
        "connectionType": "[parameters('connectionType1cnct140')]",
        "routingWeight": "[parameters('routingWeightcnct140')]"
      }
    },

    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct141')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]" },
        "virtualNetworkGateway2": {
          "id": "[concat('/subscriptions/',parameters('rmtSubIDcnct141'),'/resourceGroups/',parameters('rmtRGNamecnct141'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('remoteGWNamecnct141'))]"
        },
        "sharedKey": "[parameters('sharedKeycnct141')]",
        "connectionType": "[parameters('connectionType1cnct141')]",
        "routingWeight": "[parameters('routingWeightcnct141')]"
      }
    }





  ],



  "outputs": {
  }
}
