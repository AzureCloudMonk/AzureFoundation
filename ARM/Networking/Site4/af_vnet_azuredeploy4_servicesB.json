{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },

    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },

    "parametersLink": {
      "type": "string",
      "defaultValue": "site2/af_vnet_azuredeploy1_servicesB.parameters.json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },
    /*got the metadata spreadsheet's VNET tab and filter on VNET404
    select the columns labled Template and grouped by color*/
    "locationName": {
      "type": "string",
      "defaultValue": "usgovarizona"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg_vnet_services_az"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "AzureFoundation VNET Name for virtual data center subscription in a specific data center." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.248.0/21",
      "metadata": { "description": "AzureFoundation VNET Address Prefix, the range of addresses for a specific data center." }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": { "description": "AzureFoundation Domain Controller DNS server" }
    },


    /*got the metadata spreadsheet's Subnet tab and filter on VNET404
    select the columns labled Template and grouped by color*/
    "commentSubnet": {
      "type": "string",
      "defaultValue": "The parameters are sourced from the subnet tab filtered on VNET304",
      "metadata": { "description": "Using the metadata spreadsheet copy the template colunns to populate the deployment template" }
    },
    "subnet600Prefix": {
      "type": "string",
      "defaultValue": "10.128.248.0/24",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600Name": {
      "type": "string",
      "defaultValue": "s600_Services_Srvcs_slgmag_AZ",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600NSG": {
      "type": "string",
      "defaultValue": "600_NSG_Services",
      "metadata": { "description": "NSG: Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet625Prefix": {
      "type": "string",
      "defaultValue": "10.128.250.0/24",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625Name": {
      "type": "string",
      "defaultValue": "s625_LB_Services_Srvcs_slgmag_AZ",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625NSG": {
      "type": "string",
      "defaultValue": "625_NSG_LB_Services",
      "metadata": { "description": "NSG: Loadbalanced Services (internal) systems" }
    },
    "subnet680Prefix": {
      "type": "string",
      "defaultValue": "10.128.251.0/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet680Name": {
      "type": "string",
      "defaultValue": "s680_RTR_InsideTest_Srvcs_slgmag_AZ",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet680NSG": {
      "type": "string",
      "defaultValue": "680_NSG_RTR_InsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet681Prefix": {
      "type": "string",
      "defaultValue": "10.128.251.16/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet681Name": {
      "type": "string",
      "defaultValue": "s681_RTR_OutsideTest_Srvcs_slgmag_AZ",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet681NSG": {
      "type": "string",
      "defaultValue": "681_NSG_RTR_OutsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet682Prefix": {
      "type": "string",
      "defaultValue": "10.128.251.32/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet682Name": {
      "type": "string",
      "defaultValue": "s682_FW_IntTest_Srvcs_slgmag_AZ",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet682NSG": {
      "type": "string",
      "defaultValue": "682_NSG_FW_IntTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet683Prefix": {
      "type": "string",
      "defaultValue": "10.128.251.64/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet683Name": {
      "type": "string",
      "defaultValue": "s683_FW_ExtTest_Srvcs_slgmag_AZ",
      "metadata": { "description": "Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet683NSG": {
      "type": "string",
      "defaultValue": "683_NSG_FW_ExtTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the RTR" }
    },
    "subnet650Prefix": {
      "type": "string",
      "defaultValue": "10.128.252.0/24",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650Name": {
      "type": "string",
      "defaultValue": "s650_DMZ_Srvcs_slgmag_AZ",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650NSG": {
      "type": "string",
      "defaultValue": "650_NSG_DMZ",
      "metadata": { "description": "NSG: Internet EndPoint Machines" }
    },
    "subnet655Prefix": {
      "type": "string",
      "defaultValue": "10.128.253.0/25",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655Name": {
      "type": "string",
      "defaultValue": "s655_LB_DMZ_Srvcs_slgmag_AZ",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655NSG": {
      "type": "string",
      "defaultValue": "655_NSG_LB_DMZ",
      "metadata": { "description": "NSG: Loadbalanced Services DMZ systems" }
    },
    "subnet660Prefix": {
      "type": "string",
      "defaultValue": "10.128.254.0/26",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660Name": {
      "type": "string",
      "defaultValue": "s660_User_Tier0_Srvcs_slgmag_AZ",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660NSG": {
      "type": "string",
      "defaultValue": "660_NSG_User_Tier0",
      "metadata": { "description": "NSG: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet661Prefix": {
      "type": "string",
      "defaultValue": "10.128.254.64/26",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661Name": {
      "type": "string",
      "defaultValue": "s661_User_Tier1_Srvcs_slgmag_AZ",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661NSG": {
      "type": "string",
      "defaultValue": "661_NSG_User_Tier1",
      "metadata": { "description": "NSG: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet662Prefix": {
      "type": "string",
      "defaultValue": "10.128.254.128/26",
      "metadata": { "description": "Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet662Name": {
      "type": "string",
      "defaultValue": "s662_User_Tier2_Srvcs_slgmag_AZ",
      "metadata": { "description": "Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet662NSG": {
      "type": "string",
      "defaultValue": "662_NSG_User_Tier2",
      "metadata": { "description": "NSG: Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet700Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.0/28",
      "metadata": { "description": "Subnet for RTR for Inside interface" }
    },
    "subnet700Name": {
      "type": "string",
      "defaultValue": "s700_RTR_Out_Srvcs_slgmag_AZ",
      "metadata": { "description": "Subnet for RTR for Inside interface" }
    },
    "subnet700NSG": {
      "type": "string",
      "defaultValue": "700_NSG_RTR_Out",
      "metadata": { "description": "NSG: Subnet for RTR for Inside interface" }
    },
    "subnet701Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.16/28",
      "metadata": { "description": "Subnet for RTR for Outside" }
    },
    "subnet701Name": {
      "type": "string",
      "defaultValue": "s701_RTR_In_Srvcs_slgmag_AZ",
      "metadata": { "description": "Subnet for RTR for Outside" }
    },
    "subnet701NSG": {
      "type": "string",
      "defaultValue": "701_NSG_RTR_In",
      "metadata": { "description": "NSG: Subnet for RTR for Outside" }
    },
    "subnet702Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.32/28",
      "metadata": { "description": "Subnet for the RTR Tunnel" }
    },
    "subnet702Name": {
      "type": "string",
      "defaultValue": "s702_RTR_Tunnel_Srvcs_slgmag_AZ",
      "metadata": { "description": "Subnet for the RTR Tunnel" }
    },
    "subnet702NSG": {
      "type": "string",
      "defaultValue": "702_NSG_RTR_Tunnel",
      "metadata": { "description": "NSG: Subnet for the RTR Tunnel" }
    },
    "subnet703Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.48/28",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703Name": {
      "type": "string",
      "defaultValue": "s703_RTR_HA_Srvcs_slgmag_AZ",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703NSG": {
      "type": "string",
      "defaultValue": "703_NSG_RTR_HA",
      "metadata": { "description": "NSG: Failover subnet" }
    },
    "subnet710Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.64/28",
      "metadata": { "description": "FWA management interface" }
    },
    "subnet710Name": {
      "type": "string",
      "defaultValue": "s710_IntFWA_Mgnt_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA management interface" }
    },
    "subnet710NSG": {
      "type": "string",
      "defaultValue": "710_NSG_IntFWA_Mgnt",
      "metadata": { "description": "NSG: FWA management interface" }
    },
    "subnet711Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.80/28",
      "metadata": { "description": "FWA Inside Interface" }
    },
    "subnet711Name": {
      "type": "string",
      "defaultValue": "s711_IntFWA_In_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA Inside Interface" }
    },
    "subnet711NSG": {
      "type": "string",
      "defaultValue": "711_NSG_IntFWA_In",
      "metadata": { "description": "NSG: FWA Inside Interface" }
    },
    "subnet712Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.96/28",
      "metadata": { "description": "FWA Outside Interface" }
    },
    "subnet712Name": {
      "type": "string",
      "defaultValue": "s712_IntFWA_Out_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA Outside Interface" }
    },
    "subnet712NSG": {
      "type": "string",
      "defaultValue": "712_NSG_IntFWA_Out",
      "metadata": { "description": "NSG: FWA Outside Interface" }
    },
    "subnet713Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.112/28",
      "metadata": { "description": "FWA DMZ Interface" }
    },
    "subnet713Name": {
      "type": "string",
      "defaultValue": "s713_IntFWA_DMZ_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA DMZ Interface" }
    },
    "subnet713NSG": {
      "type": "string",
      "defaultValue": "713_NSG_IntFWA_DMZ",
      "metadata": { "description": "NSG: FWA DMZ Interface" }
    },
    "subnet715Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.128/28",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715Name": {
      "type": "string",
      "defaultValue": "s715_IntLB_Srvcs_slgmag_AZ",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715NSG": {
      "type": "string",
      "defaultValue": "715_NSG_IntLB",
      "metadata": { "description": "NSG: Internal Loadbalancer virtual appliance" }
    },
    "subnet750Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.144/28",
      "metadata": { "description": "FWA Management interface" }
    },
    "subnet750Name": {
      "type": "string",
      "defaultValue": "s750_ExtFWA_Mgnt_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA Management interface" }
    },
    "subnet750NSG": {
      "type": "string",
      "defaultValue": "750_NSG_ExtFWA_Mgnt",
      "metadata": { "description": "NSG: FWA Management interface" }
    },
    "subnet751Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.160/28",
      "metadata": { "description": "FWA Inside Interface" }
    },
    "subnet751Name": {
      "type": "string",
      "defaultValue": "s751_ExtFWA_In_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA Inside Interface" }
    },
    "subnet751NSG": {
      "type": "string",
      "defaultValue": "751_NSG_ExtFWA_In",
      "metadata": { "description": "NSG: FWA Inside Interface" }
    },
    "subnet752Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.176/28",
      "metadata": { "description": "FWA Outside Interface" }
    },
    "subnet752Name": {
      "type": "string",
      "defaultValue": "s752_ExtFWA_Out_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA Outside Interface" }
    },
    "subnet752NSG": {
      "type": "string",
      "defaultValue": "752_NSG_ExtFWA_Out",
      "metadata": { "description": "NSG: FWA Outside Interface" }
    },
    "subnet753Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.192/28",
      "metadata": { "description": "FWA DMZ Interface" }
    },
    "subnet753Name": {
      "type": "string",
      "defaultValue": "s753_ExtFWA_DMZ_Srvcs_slgmag_AZ",
      "metadata": { "description": "FWA DMZ Interface" }
    },
    "subnet753NSG": {
      "type": "string",
      "defaultValue": "753_NSG_ExtFWA_DMZ",
      "metadata": { "description": "NSG: FWA DMZ Interface" }
    },
    "subnet755Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.208/28",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755Name": {
      "type": "string",
      "defaultValue": "s755_ExtLB_Srvcs_slgmag_AZ",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755NSG": {
      "type": "string",
      "defaultValue": "755_NSG_ExtLB",
      "metadata": { "description": "NSG: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet799Prefix": {
      "type": "string",
      "defaultValue": "10.128.255.224/27",
      "metadata": { "description": "The Azure gateway network " }
    },
    "subnet799Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": { "description": "The Azure gateway network " }
    },

    /*got the metadata spreadsheet's Gateway tab and filter on VNET404
    select the columns labled Template and grouped by color*/
    "GatewayNamegw404": {
      "type": "string",
      "defaultValue": "gw_Services_AZ_ExpressRoute",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "VPNTypegw404": {
      "type": "string",
      "defaultValue": "RouteBased",
      "allowedValues": [ "RouteBased", "PolicyBased" ],
      "metadata": { "description": "The type of VPN connection Route or Policy based." }
    },
    "PublicIPNamegw404": {
      "type": "string",
      "defaultValue": "gwpip_Services_AZExpressRoute",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "gatewaySKUgw404": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard", "HighPerformance", "VpnGw1", "VpnGW2", "VpnGw3" ],
      "metadata": { "description": "Gateway SKU, the type of gateway Basic, Standard, High Performance" }
    },
    "GatewayTypegw404": {
      "type": "string",
      "defaultValue": "ExpressRoute",
      "metadata": { "description": "The type of gateway that is being created.  This can be either StaticRouting or DynamicRouting." }
    },
    "erCircuitName": {
      "type": "String",
      "defaultValue": "slgmag_Services_ExpressRoute",
      "metadata": { "description": "The name of the ER Circuit" }
    },
    "erSKUTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Standard", "Premium" ],
      "metadata": { "description": "Chosen SKU Tier of ExpressRoute circuit. Choose from Premium or Standard SKU tiers." }
    },
    "erSKUFamily": {
      "type": "string",
      "defaultValue": "MeteredData",
      "allowedValues": [ "MeteredData", "UnlimitedData" ],
      "metadata": { "description": "Chosen SKU family of ExpressRoute circuit. Choose from MeteredData or UnlimitedData SKU families." }
    },
    "erBandwidth": {
      "type": "int",
      "metadata": { "description": "This is the bandwidth in Mbps of the circuit being created. It must exactly match one of the available bandwidth offers List ExpressRoute Service Providers API call." }
    },
    "erSPName": {
      "type": "string",
      "metadata": { "description": "ExpressRoute Service Provider Name" }
    },
    "erPeeringLocation": {
      "type": "string",
      "metadata": { "description": "The ExpressRoute Peering Location." }
    },
    "SubIDgw404": {
      "type": "string",
      "metadata": { "description": "The Subscrition ID" }
    },
    "BGPgw404": {
      "type": "bool",
      "metadata": { "description": "Will the gateway use BGP routing?" }
    },
    "bgpASNgw404": {
      "type": "int",
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpNeighborgw404": {
      "type": "string",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpRoutingWeightgw404": {
      "type": "int",
      "metadata": { "description": "The weight added to routes learned from this BGP speaker" }
    },
    "GatewayNamegw4042": {
      "type": "string",
      "defaultValue": "gw_Services_AZ_Vpn",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "VPNTypegw4042": {
      "type": "string",
      "defaultValue": "RouteBased",
      "allowedValues": [ "RouteBased", "PolicyBased" ],
      "metadata": { "description": "The type of VPN connection Route or Policy based." }
    },
    "PublicIPNamegw4042": {
      "type": "string",
      "defaultValue": "gwpip_Services_AZVpn",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "gatewaySKUgw4042": {
      "type": "string",
      "defaultValue": "VpnGw1",
      "allowedValues": [ "Basic", "Standard", "HighPerformance", "VpnGw1", "VpnGW2", "VpnGw3" ],
      "metadata": { "description": "Gateway SKU, the type of gateway Basic, Standard, High Performance" }
    },
    "GatewayTypegw4042": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": { "description": "The type of gateway that is being created.  This can be either StaticRouting or DynamicRouting." }
    },
    "SubIDgw4042": {
      "type": "string",
      "metadata": { "description": "The Subscrition ID" }
    },
    "BGPgw4042": {
      "type": "bool",
      "metadata": { "description": "Will the gateway use BGP routing?" }
    },
    "bgpASNgw4042": {
      "type": "int",
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpNeighborgw4042": {
      "type": "string",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpRoutingWeightgw4042": {
      "type": "int",
      "metadata": { "description": "The weight added to routes learned from this BGP speaker" }
    },


    /*got the metadata spreadsheet's Connection tab and filter on VNET404
    select the columns labled Template and grouped by color*/
    "ConnectionNamecnct404": {
      "type": "string",
      "defaultValue": "IPSec_slgmag_AZ_Services_To_DC1_Net1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct404": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "LocalNamecnct404": {
      "type": "string",
      "defaultValue": "Net1_DC1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct404": {
      "type": "string",
      "defaultValue": "1.1.1.10",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct404": {
      "type": "array",
      "defaultValue": [ "10.0.0.0/10" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct404": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct404": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct404": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "GWNamecnct404": {
      "type": "string",
      "defaultValue": "gw_Services_AZ_Vpn",
      "metadata": { "description": "The gateway name that matches the source VNET." }
    },
    "bgpASNcnct404": {
      "type": "int",
      "defaultValue": 65512,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct404": {
      "type": "string",
      "defaultValue": "10.0.0.1",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct404": {
      "type": "int",
      "defaultValue": 100,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "ConnectionNamecnct405": {
      "type": "string",
      "defaultValue": "Vnet2Vnet_slgmag_AZ_Services_To_TX_Services",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct405": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "remoteGWNamecnct405": {
      "type": "string",
      "defaultValue": "gw_Services_TX_Vpn",
      "metadata": { "description": "Name for the remote VNET for a VNET to VNET connection" }
    },
    "localGWIPcnct405": {
      "type": "string",
      "defaultValue": "52.238.112.238",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct405": {
      "type": "array",
      "defaultValue": [ "10.128.184.0/21" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct405": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct405": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct405": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct405": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct405": {
      "type": "string",
      "defaultValue": "rg_vnet_services_tx",
      "metadata": { "description": "The resource group for the remote subscriptions VNET gateway." }
    },
    "rmtConnectionNamecnct405": {
      "type": "string",
      "defaultValue": "Vnet2Vnet_slgmag_TX_Services_To_AZ_Services",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct405": {
      "type": "string",
      "defaultValue": "usgovtexas",
      "metadata": { "description": "The name of the remote location." }
    },
    "GWNamecnct405": {
      "type": "string",
      "defaultValue": "gw_Services_AZ_Vpn",
      "metadata": { "description": "The gateway name that matches the source VNET." }
    },
    "bgpASNcnct405": {
      "type": "int",
      "defaultValue": 65523,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct405": {
      "type": "string",
      "defaultValue": "10.128.191.254",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct405": {
      "type": "int",
      "defaultValue": 100,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "ConnectionNamecnct406": {
      "type": "string",
      "defaultValue": "Peering_slgmag_AZ_Services_To_AZ_Prod",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct406": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct406": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct406": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct406": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct406": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct406": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct406": {
      "type": "string",
      "defaultValue": "vnet_prod_az",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct406": {
      "type": "string",
      "defaultValue": "4a0d1d83-f557-4065-8423-be499038298a",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct406": {
      "type": "string",
      "defaultValue": "rg_vnet_prod_az",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct406": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct406": {
      "type": "string",
      "defaultValue": "usgovarizona",
      "metadata": { "description": "The name of the remote location." }
    },
    "bgpASNcnct406": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct406": {
      "type": "string",
      "defaultValue": "0",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct406": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "ConnectionNamecnct407": {
      "type": "string",
      "defaultValue": "Peering_slgmag_AZ_Services_To_AZ_HBI",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct407": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct407": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct407": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct407": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct407": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct407": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct407": {
      "type": "string",
      "defaultValue": "vnet_hbi_az",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct407": {
      "type": "string",
      "defaultValue": "97eba262-9086-4a3e-9770-dcfef6c3df30",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct407": {
      "type": "string",
      "defaultValue": "rg_vnet_hbi_az",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct407": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct407": {
      "type": "string",
      "defaultValue": "usgovarizona",
      "metadata": { "description": "The name of the remote location." }
    },
    "bgpASNcnct407": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct407": {
      "type": "string",
      "defaultValue": "0",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct407": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "ConnectionNamecnct408": {
      "type": "string",
      "defaultValue": "Peering_slgmag_AZ_Services_To_AZ_PreProd",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct408": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct408": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct408": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct408": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct408": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct408": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct408": {
      "type": "string",
      "defaultValue": "vnet_preprod_az",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct408": {
      "type": "string",
      "defaultValue": "a4b962d2-6b17-4c38-af02-010a6e774379",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct408": {
      "type": "string",
      "defaultValue": "rg_vnet_preprod_az",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct408": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct408": {
      "type": "string",
      "defaultValue": "usgovarizona",
      "metadata": { "description": "The name of the remote location." }
    },
    "bgpASNcnct408": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct408": {
      "type": "string",
      "defaultValue": "0",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct408": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },
    "ConnectionNamecnct409": {
      "type": "string",
      "defaultValue": "Peering_slgmag_AZ_Services_To_AZ_Storage",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct409": {
      "type": "string",
      "defaultValue": "vnet_services_az",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct409": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct409": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct409": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct409": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct409": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct409": {
      "type": "string",
      "defaultValue": "vnet_storage_az",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct409": {
      "type": "string",
      "defaultValue": "0223b7af-344f-42cd-bed2-5ebbc7d06d5d",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct409": {
      "type": "string",
      "defaultValue": "rg_vnet_storage_az",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct409": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct409": {
      "type": "string",
      "defaultValue": "usgovarizona",
      "metadata": { "description": "The name of the remote location." }
    },
    "bgpASNcnct409": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The BGP speaker's ASN." }
    },
    "bgpPeeringAddresscnct409": {
      "type": "string",
      "defaultValue": "0",
      "metadata": { "description": "The BGP peering address and BGP identifier of this BGP speaker." }
    },
    "bgpPeerWeightcnct409": {
      "type": "int",
      "defaultValue": 0,
      "metadata": { "description": "The weight added to routes learned from this BGP speaker." }
    },


  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet799Name'))]"
  },
  "resources": [
    /*goto the Metadata spreadsheet and the NSGRules Tab, filter on VENT404
    select the Resource columns grouped by color.*/
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet600NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "600_NSG_Services_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet625NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "625_NSG_LB_Services_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet650NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "650_NSG_DMZ_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet655NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "655_NSG_LB_DMZ_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet660NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "660_NSG_User_Tier0_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet661NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "661_NSG_User_Tier1_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet662NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "662_NSG_User_Tier2_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet680NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "680_NSG_CSR_InsideTest_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet681NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "681_NSG_CSR_OutsideTest_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet682NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "682_NSG_FW_IntTest_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet683NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "683_NSG_FW_ExtTest_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet700NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "700_NSG_CSR_Out_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet701NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "701_NSG_CSR_In_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet702NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "702_NSG_CSR_Tunnel_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet703NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "703_NSG_CSR_HA_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet710NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "710_NSG_IntASA_Mgnt_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet711NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "711_NSG_IntASA_In_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet712NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "712_NSG_IntASA_Out_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet713NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "713_NSG_IntASA_DMZ_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet715NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "715_NSG_IntLB_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet750NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "750_NSG_ExtASA_Mgnt_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet751NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "751_NSG_ExtASA_In_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet752NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "752_NSG_ExtASA_Out_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet753NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "753_NSG_ExtASA_DMZ_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet755NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "755_NSG_ExtLB_AZ" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    /*goto the Metadata spreadsheet and the Subnet Tab, filter on VENT404
    select the Resource columns grouped by color.*/
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnetAddressPrefix')]" ] },
        "subnets": [
          {
            "name": "[parameters('subnet600name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet600prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet600NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet625name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet625prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet625NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet680name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet680prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet680NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet681name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet681prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet681NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet682name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet682prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet682NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet683name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet683prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet683NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet650name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet650prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet650NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet655name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet655prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet655NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet660name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet660prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet660NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet661name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet661prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet661NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet662name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet662prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet662NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet700name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet700prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet701name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet701prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet702name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet702prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet703name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet703prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet710name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet710prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet711name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet711prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet712name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet712prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet713name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet713prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet715name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet715prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet750name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet750prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet751name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet751prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet752name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet752prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet753name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet753prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet755name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet755prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]" }
            }
          },

          {
            "name": "[parameters('subnet799name')]",
            "properties": { "addressPrefix": "[parameters('subnet799prefix')]" }
          }
        ],
        /*STOP Subnet Resources*/

        "resources": [
          /*goto the Metadata spreadsheet and the Connections Tab, filter on VENT404
    select the Resource columns grouped by color. The last column is for Peering*/
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct406')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct406'), '/resourceGroups/', parameters('rmtRGNamecnct406'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct406'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct406'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct406')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct406')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct406')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct406')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct406'), '/resourceGroups/', parameters('rmtRGNamecnct406'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct406'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct407')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct407'), '/resourceGroups/', parameters('rmtRGNamecnct407'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct407'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct407'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct407')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct407')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct407')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct407')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct407'), '/resourceGroups/', parameters('rmtRGNamecnct407'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct407'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct408')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct408'), '/resourceGroups/', parameters('rmtRGNamecnct408'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct408'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct408'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct408')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct408')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct408')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct408')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct408'), '/resourceGroups/', parameters('rmtRGNamecnct408'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct408'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct409')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct409'), '/resourceGroups/', parameters('rmtRGNamecnct409'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct409'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct409'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct409')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct409')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct409')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct409')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct409'), '/resourceGroups/', parameters('rmtRGNamecnct409'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct409'))]" }
            }
          }
        ],

        "dhcpOptions": { "dnsServers": [ "10.128.59.36" ] },


        "dependsOn": [
          /*goto the Metadata spreadsheet and the Subnet Tab, filter on VENT404
    select the DependsOn columns grouped by color.*/

          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet600NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet625NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet680NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet681NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet682NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet683NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet650NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet655NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet660NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet661NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet662NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]"


        ]
      }
    },
    /*goto the Metadata spreadsheet and the Gateway Tab, filter on VENT404
    select the DependsOn columns grouped by color.*/

    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('PublicIPNamegw4042')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('GatewayNamegw4042')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/publicIPAddresses/', parameters('PublicIPNamegw4042'))]", "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('PublicIPNamegw4042'))]" }
            }
          }
        ],
        "gatewayType": "[parameters('GatewayTypegw4042')]",
        "vpnType": "[parameters('VPNTypegw4042')]",
        "enableBGP": "[parameters('BGPgw4042')]",
        "asn": "[parameters('bgpASNgw4042')]",
        "bgpPeeringAddress": "[parameters('bgpNeighborgw4042')]",
        "peerWeight": "[parameters('bgpRoutingWeightgw4042')]",
        "sku": {
          "name": "[parameters('gatewaySKUgw4042')]",
          "tier": "[parameters('gatewaySKUgw4042')]"
        }
      }
    },


    /*Goto the metadata spreadsheet's connection tab and filter on VNET404
    select the columns that are equal to the resources and grouped by color.*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('LocalNamecnct404')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('LocalIPPrefixcnct404')]" },
        "bgpSettings": {
          "asn": "[parameters('bgpASNcnct404')]",
          "bgpPeeringAddress": "[parameters('bgpPeeringAddresscnct404')]",
          "peerWeight": "[parameters('bgpPeerWeightcnct404')]"
        },
        "gatewayIpAddress": "[parameters('localGWIPcnct404')]"
      }
    },

    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct404')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct404'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('LocalNamecnct404'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct404'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalNamecnct404'))]" },
        "sharedKey": "[parameters('sharedKeycnct404')]",
        "connectionType": "[parameters('connectionType1cnct404')]",
        "routingWeight": "[parameters('routingWeightcnct404')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct405')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct405'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct405'))]" },
        "virtualNetworkGateway2": { "id": "[concat('/subscriptions/',parameters('rmtSubIDcnct405'),'/resourceGroups/',parameters('rmtRGNamecnct405'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('remoteGWNamecnct405'))]" },
        "sharedKey": "[parameters('sharedKeycnct405')]",
        "connectionType": "[parameters('connectionType1cnct405')]",
        "routingWeight": "[parameters('routingWeightcnct405')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('rmtConnectionNamecnct405')]",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('rmtLocationcnct405')]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct405'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[concat('/subscriptions/',parameters('rmtSubIDcnct405'),'/resourceGroups/',parameters('rmtRGNamecnct405'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('remoteGWNamecnct405'))]" },
        "virtualNetworkGateway2": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct405'))]" },
        "sharedKey": "[parameters('sharedKeycnct405')]",
        "connectionType": "[parameters('connectionType1cnct405')]",
        "routingWeight": "[parameters('routingWeightcnct405')]"
      }
    }

  ],
  "outputs": {
  }
}
