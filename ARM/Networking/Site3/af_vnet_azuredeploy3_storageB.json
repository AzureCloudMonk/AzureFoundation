{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commentLocation": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters for the deployment template filter on VNET303"
    },
    "commentVNET": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from VNET tab, filter on VNET303"
    },
    "commentSubnet": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from subnet tab, filter on VNET303"
    },
    "commentConnections": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from Connection tab, filter on VNET303"
    },
    "commentGateway": {
      "type": "string",
      "defaultValue": "\"using the metadata template to populate the parameters from Gateway tab, filter on VNET3023"
    },
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/site1",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },

    /*got the metadata spreadsheet's VNET tab and filter on VNET303
    select the columns labled Template and grouped by color*/
    "locationName": {
      "type": "string",
      "defaultValue": "usgovtexas"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg_vnet_storage_tx"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_storage_tx",
      "metadata": { "description": "AzureFoundation VNET Name for virtual data center subscription in a specific data center." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.176.0/21",
      "metadata": { "description": "AzureFoundation VNET Address Prefix, the range of addresses for a specific data center." }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": { "description": "AzureFoundation Domain Controller DNS server" }
    },


    /*got the metadata spreadsheet's Subnet tab and filter on VNET303
    select the columns labled Parameters and grouped by color*/
    "subnet500Prefix": {
      "type": "string",
      "defaultValue": "10.128.176.0/24",
      "metadata": { "description": "Storage appliances" }
    },
    "subnet500Name": {
      "type": "string",
      "defaultValue": "s500_Storage_Storage_slgmag_TX",
      "metadata": { "description": "Storage appliances" }
    },
    "subnet500NSG": {
      "type": "string",
      "defaultValue": "500_NSG_Storage",
      "metadata": { "description": "NSG: Storage appliances" }
    },
    "subnet505Prefix": {
      "type": "string",
      "defaultValue": "10.128.177.0/24",
      "metadata": { "description": "Loadbalanced Storage appliances" }
    },
    "subnet505Name": {
      "type": "string",
      "defaultValue": "s505_LB_Storage_Storage_slgmag_TX",
      "metadata": { "description": "Loadbalanced Storage appliances" }
    },
    "subnet505NSG": {
      "type": "string",
      "defaultValue": "505_NSG_LB_Storage",
      "metadata": { "description": "NSG: Loadbalanced Storage appliances" }
    },
    "subnet560Prefix": {
      "type": "string",
      "defaultValue": "10.128.178.0/25",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet560Name": {
      "type": "string",
      "defaultValue": "s560_User_Tier0_Storage_slgmag_TX",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet560NSG": {
      "type": "string",
      "defaultValue": "560_NSG_User_Tier0",
      "metadata": { "description": "NSG: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet561Prefix": {
      "type": "string",
      "defaultValue": "10.128.178.128/25",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet561Name": {
      "type": "string",
      "defaultValue": "s561_User_Tier1_Storage_slgmag_TX",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet561NSG": {
      "type": "string",
      "defaultValue": "561_NSG_User_Tier1",
      "metadata": { "description": "NSG: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet599Prefix": {
      "type": "string",
      "defaultValue": "10.128.183.224/27",
      "metadata": { "description": "Gateway Services to Local Networks" }
    },
    "subnet599Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": { "description": "Gateway Services to Local Networks" }
    },

    /*got the metadata spreadsheet's Connection tab and filter on VNET303
    select the columns labled Template and grouped by color*/
    "ConnectionNamecnct303": {
      "type": "string",
      "defaultValue": "Peering_slgmag_TX_Storage_To_TX_Services",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct303": {
      "type": "string",
      "defaultValue": "vnet_storage_tx",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct303": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct303": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct303": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct303": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct303": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct303": {
      "type": "string",
      "defaultValue": "vnet_services_tx",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct303": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct303": {
      "type": "string",
      "defaultValue": "rg_vnet_services_tx",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct303": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct303": {
      "type": "string",
      "defaultValue": "usgovtexas",
      "metadata": { "description": "The name of the remote location." }
    },

  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet599Name'))]"
  },

  "resources": [
    /*got the metadata spreadsheet's NSGRules tab and filter on VNET303
    select the columns labled Resources and grouped by color*/
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet500NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "500_NSG_Storage_TX" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet505NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "505_NSG_LB_Storage_TX" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet560NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "560_NSG_User_Tier0_TX" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet561NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "561_NSG_User_Tier1_TX" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          },
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          }
        ]
      }
    },

    /*got the metadata spreadsheet's Subnet tab and filter on VNET303
    select the columns labled Resources and grouped by color*/
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnetAddressPrefix')]" ] },
        "subnets": [
          {
            "name": "[parameters('subnet500name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet500prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet500NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet505name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet505prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet505NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet560name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet560prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet560NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet561name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet561prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet561NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet599name')]",
            "properties": { "addressPrefix": "[parameters('subnet599prefix')]" }
          }
        ],
        /*Stop Subnet import*/

        "resoures": [
          /*got the metadata spreadsheet's Connection tab and filter on VNET303
    select the columns labled Parameters and grouped by color*/
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct303')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct303'), '/resourceGroups/', parameters('rmtRGNamecnct303'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct303'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct303'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct303')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct303')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct303')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct303')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct303'), '/resourceGroups/', parameters('rmtRGNamecnct303'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct303'))]" }
            }
          }
        ],

        "dhcpOptions": { "dnsServers": [ "10.128.59.36" ] },
        "dependsOn": [
          /*Using the metadata template on the Subnet Tab, filter to VNET103 and select
          the columns with DependsOn and grouped by color*/
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet500NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet505NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet560NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet561NSG'))]"
        ]

      }
    }
  ],
  "outputs": {
  }
}
