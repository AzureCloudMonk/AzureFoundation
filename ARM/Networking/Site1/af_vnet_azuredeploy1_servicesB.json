{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": { "description": "The parameter file for the second site's GW." }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET104
    select the columns with Temlate and grouped by color. */

    "locationName": {
      "type": "string",
      "defaultValue": "westcentralus"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg_vnet_services_w1"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "AzureFoundation VNET Name for virtual data center subscription in a specific data center." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.56.0/21",
      "metadata": { "description": "AzureFoundation VNET Address Prefix, the range of addresses for a specific data center." }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [ "10.128.59.36" ],
      "metadata": { "description": "AzureFoundation Domain Controller DNS server" }
    },


    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "subnet600Prefix": {
      "type": "string",
      "defaultValue": "10.128.56.0/24",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600Name": {
      "type": "string",
      "defaultValue": "600_Services_Srvcs_mac_slg_W1",
      "metadata": { "description": "Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet600NSG": {
      "type": "string",
      "defaultValue": "600_NSG_Services",
      "metadata": { "description": "NSG: Used to host highly sensitive data that is also highly accessed." }
    },
    "subnet625Prefix": {
      "type": "string",
      "defaultValue": "10.128.58.0/25",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625Name": {
      "type": "string",
      "defaultValue": "625_LB_Services_Srvcs_mac_slg_W1",
      "metadata": { "description": "Loadbalanced Services (internal) systems" }
    },
    "subnet625NSG": {
      "type": "string",
      "defaultValue": "625_NSG_LB_Services",
      "metadata": { "description": "NSG: Loadbalanced Services (internal) systems" }
    },
    "subnet680Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.0/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680Name": {
      "type": "string",
      "defaultValue": "680_CSR_InsideTest_Srvcs_mac_slg_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet680NSG": {
      "type": "string",
      "defaultValue": "680_NSG_CSR_InsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.16/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682Name": {
      "type": "string",
      "defaultValue": "682_FW_IntTest_Srvcs_mac_slg_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet682NSG": {
      "type": "string",
      "defaultValue": "682_NSG_FW_IntTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.32/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681Name": {
      "type": "string",
      "defaultValue": "681_CSR_OutsideTest_Srvcs_mac_slg_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet681NSG": {
      "type": "string",
      "defaultValue": "681_NSG_CSR_OutsideTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683Prefix": {
      "type": "string",
      "defaultValue": "10.128.59.48/28",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683Name": {
      "type": "string",
      "defaultValue": "683_FW_ExtTest_Srvcs_mac_slg_W1",
      "metadata": { "description": "Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet683NSG": {
      "type": "string",
      "defaultValue": "683_NSG_FW_ExtTest",
      "metadata": { "description": "NSG: Used to Test the routing to the inside interface of the CSR" }
    },
    "subnet650Prefix": {
      "type": "string",
      "defaultValue": "10.128.60.0/25",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650Name": {
      "type": "string",
      "defaultValue": "650_DMZ_Srvcs_mac_slg_W1",
      "metadata": { "description": "Internet EndPoint Machines" }
    },
    "subnet650NSG": {
      "type": "string",
      "defaultValue": "650_NSG_DMZ",
      "metadata": { "description": "NSG: Internet EndPoint Machines" }
    },
    "subnet655Prefix": {
      "type": "string",
      "defaultValue": "10.128.61.0/25",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655Name": {
      "type": "string",
      "defaultValue": "655_LB_DMZ_Srvcs_mac_slg_W1",
      "metadata": { "description": "Loadbalanced Services DMZ systems" }
    },
    "subnet655NSG": {
      "type": "string",
      "defaultValue": "655_NSG_LB_DMZ",
      "metadata": { "description": "NSG: Loadbalanced Services DMZ systems" }
    },
    "subnet660Prefix": {
      "type": "string",
      "defaultValue": "10.128.62.0/26",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660Name": {
      "type": "string",
      "defaultValue": "660_User_Tier0_Srvcs_mac_slg_W1",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet660NSG": {
      "type": "string",
      "defaultValue": "660_NSG_User_Tier0",
      "metadata": { "description": "NSG: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet661Prefix": {
      "type": "string",
      "defaultValue": "10.128.62.64/26",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661Name": {
      "type": "string",
      "defaultValue": "661_User_Tier1_Srvcs_mac_slg_W1",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet661NSG": {
      "type": "string",
      "defaultValue": "661_NSG_User_Tier1",
      "metadata": { "description": "NSG: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet662Prefix": {
      "type": "string",
      "defaultValue": "10.128.62.128/26",
      "metadata": { "description": "Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet662Name": {
      "type": "string",
      "defaultValue": "662_User_Tier2_Srvcs_mac_slg_W1",
      "metadata": { "description": "Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet662NSG": {
      "type": "string",
      "defaultValue": "662_NSG_User_Tier2",
      "metadata": { "description": "NSG: Tier 2 - Control of user workstations and devices. Tier 2 administrator accounts have administrative control of a significant amount of business value that is hosted on user workstations and devices" }
    },
    "subnet700Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.0/28",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700Name": {
      "type": "string",
      "defaultValue": "700_CSR_Out_Srvcs_mac_slg_W1",
      "metadata": { "description": "Subnet for CSR for Inside interface" }
    },
    "subnet700NSG": {
      "type": "string",
      "defaultValue": "700_NSG_CSR_Out",
      "metadata": { "description": "NSG: Subnet for CSR for Inside interface" }
    },
    "subnet701Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.16/28",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701Name": {
      "type": "string",
      "defaultValue": "701_CSR_In_Srvcs_mac_slg_W1",
      "metadata": { "description": "Subnet for CSR for Outside" }
    },
    "subnet701NSG": {
      "type": "string",
      "defaultValue": "701_NSG_CSR_In",
      "metadata": { "description": "NSG: Subnet for CSR for Outside" }
    },
    "subnet702Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.32/28",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702Name": {
      "type": "string",
      "defaultValue": "702_CSR_Tunnel_Srvcs_mac_slg_W1",
      "metadata": { "description": "Subnet for the CSR Tunnel" }
    },
    "subnet702NSG": {
      "type": "string",
      "defaultValue": "702_NSG_CSR_Tunnel",
      "metadata": { "description": "NSG: Subnet for the CSR Tunnel" }
    },
    "subnet703Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.48/28",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703Name": {
      "type": "string",
      "defaultValue": "703_CSR_HA_Srvcs_mac_slg_W1",
      "metadata": { "description": "Failover subnet" }
    },
    "subnet703NSG": {
      "type": "string",
      "defaultValue": "703_NSG_CSR_HA",
      "metadata": { "description": "NSG: Failover subnet" }
    },
    "subnet710Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.64/28",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710Name": {
      "type": "string",
      "defaultValue": "710_IntASA_Mgnt_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA management interface" }
    },
    "subnet710NSG": {
      "type": "string",
      "defaultValue": "710_NSG_IntASA_Mgnt",
      "metadata": { "description": "NSG: ASA management interface" }
    },
    "subnet711Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.80/28",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711Name": {
      "type": "string",
      "defaultValue": "711_IntASA_In_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet711NSG": {
      "type": "string",
      "defaultValue": "711_NSG_IntASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet712Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.96/28",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712Name": {
      "type": "string",
      "defaultValue": "712_IntASA_Out_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet712NSG": {
      "type": "string",
      "defaultValue": "712_NSG_IntASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet713Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.112/28",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713Name": {
      "type": "string",
      "defaultValue": "713_IntASA_DMZ_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet713NSG": {
      "type": "string",
      "defaultValue": "713_NSG_IntASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet715Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.128/28",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715Name": {
      "type": "string",
      "defaultValue": "715_IntLB_Srvcs_mac_slg_W1",
      "metadata": { "description": "Internal Loadbalancer virtual appliance" }
    },
    "subnet715NSG": {
      "type": "string",
      "defaultValue": "715_NSG_IntLB",
      "metadata": { "description": "NSG: Internal Loadbalancer virtual appliance" }
    },
    "subnet750Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.144/28",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750Name": {
      "type": "string",
      "defaultValue": "750_ExtASA_Mgnt_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA Management interface" }
    },
    "subnet750NSG": {
      "type": "string",
      "defaultValue": "750_NSG_ExtASA_Mgnt",
      "metadata": { "description": "NSG: ASA Management interface" }
    },
    "subnet751Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.160/28",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751Name": {
      "type": "string",
      "defaultValue": "751_ExtASA_In_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA Inside Interface" }
    },
    "subnet751NSG": {
      "type": "string",
      "defaultValue": "751_NSG_ExtASA_In",
      "metadata": { "description": "NSG: ASA Inside Interface" }
    },
    "subnet752Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.176/28",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752Name": {
      "type": "string",
      "defaultValue": "752_ExtASA_Out_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA Outside Interface" }
    },
    "subnet752NSG": {
      "type": "string",
      "defaultValue": "752_NSG_ExtASA_Out",
      "metadata": { "description": "NSG: ASA Outside Interface" }
    },
    "subnet753Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.192/28",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753Name": {
      "type": "string",
      "defaultValue": "753_ExtASA_DMZ_Srvcs_mac_slg_W1",
      "metadata": { "description": "ASA DMZ Interface" }
    },
    "subnet753NSG": {
      "type": "string",
      "defaultValue": "753_NSG_ExtASA_DMZ",
      "metadata": { "description": "NSG: ASA DMZ Interface" }
    },
    "subnet755Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.208/28",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755Name": {
      "type": "string",
      "defaultValue": "755_ExtLB_Srvcs_mac_slg_W1",
      "metadata": { "description": "External Loadbalancer Virtual Network Appliance " }
    },
    "subnet755NSG": {
      "type": "string",
      "defaultValue": "755_NSG_ExtLB",
      "metadata": { "description": "NSG: External Loadbalancer Virtual Network Appliance " }
    },
    "subnet799Prefix": {
      "type": "string",
      "defaultValue": "10.128.63.224/27",
      "metadata": { "description": "The Azure gateway network " }
    },
    "subnet799Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": { "description": "The Azure gateway network " }
    },


    /*
    Using the metadata spreadsheet, the gateway tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "GatewayNamegw104": {
      "type": "string",
      "defaultValue": "gw_Services_W1_ExpressRoute",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "VPNTypegw104": {
      "type": "string",
      "defaultValue": "RouteBased",
      "allowedValues": [ "RouteBased", "PolicyBased" ],
      "metadata": { "description": "The type of VPN connection Route or Policy based." }
    },
    "PublicIPNamegw104": {
      "type": "string",
      "defaultValue": "gwpip_Services_W1ExpressRoute",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "gatewaySKUgw104": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard", "HighPerformance" ],
      "metadata": { "description": "Gateway SKU, the type of gateway Basic, Standard, High Performance" }
    },
    "GatewayTypegw104": {
      "type": "string",
      "defaultValue": "ExpressRoute",
      "metadata": { "description": "The type of gateway that is being created.  This can be either StaticRouting or DynamicRouting." }
    },
    "erCircuitName": {
      "type": "String",
      "defaultValue": "mac_slg_Services_ER",
      "metadata": { "description": "The name of the ER Circuit" }
    },
    "erSKUTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Standard", "Premium" ],
      "metadata": { "description": "Chosen SKU Tier of ExpressRoute circuit. Choose from Premium or Standard SKU tiers." }
    },
    "erSKUFamily": {
      "type": "string",
      "defaultValue": "MeteredData",
      "allowedValues": [ "MeteredData", "UnlimitedData" ],
      "metadata": { "description": "Chosen SKU family of ExpressRoute circuit. Choose from MeteredData or UnlimitedData SKU families." }
    },
    "erBandwidth": {
      "type": "int",
      "metadata": { "description": "This is the bandwidth in Mbps of the circuit being created. It must exactly match one of the available bandwidth offers List ExpressRoute Service Providers API call." }
    },
    "erSPName": {
      "type": "string",
      "metadata": { "description": "ExpressRoute Service Provider Name" }
    },
    "erPeeringLocation": {
      "type": "string",
      "metadata": { "description": "The ExpressRoute Peering Location." }
    },
    "SubIDgw104": {
      "type": "string",
      "metadata": { "description": "The Subscrition ID" }
    },
    "BGPgw104": {
      "type": "bool",
      "metadata": { "description": "Will the gateway use BGP routing?" }
    },
    "GatewayNamegw1042": {
      "type": "string",
      "defaultValue": "gw_Services_W1_Vpn",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "VPNTypegw1042": {
      "type": "string",
      "defaultValue": "RouteBased",
      "allowedValues": [ "RouteBased", "PolicyBased" ],
      "metadata": { "description": "The type of VPN connection Route or Policy based." }
    },
    "PublicIPNamegw1042": {
      "type": "string",
      "defaultValue": "gwpip_Services_W1Vpn",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "gatewaySKUgw1042": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard", "HighPerformance" ],
      "metadata": { "description": "Gateway SKU, the type of gateway Basic, Standard, High Performance" }
    },
    "GatewayTypegw1042": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": { "description": "The type of gateway that is being created.  This can be either StaticRouting or DynamicRouting." }
    },
    "SubIDgw1042": {
      "type": "string",
      "metadata": { "description": "The Subscrition ID" }
    },
    "BGPgw1042": {
      "type": "bool",
      "metadata": { "description": "Will the gateway use BGP routing?" }
    },



    /*
    Using the metadata spreadsheet, the connection tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "ConnectionNamecnct140": {
      "type": "string",
      "defaultValue": "IPSec_mac_slg_Services_To_Net1_DC1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct140": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "LocalNamecnct140": {
      "type": "string",
      "defaultValue": "Net1_DC1",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct140": {
      "type": "string",
      "defaultValue": "1.1.1.10",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct140": {
      "type": "array",
      "defaultValue": [ "10.0.0.0/10" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct140": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct140": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct140": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "GWNamecnct140": {
      "type": "string",
      "defaultValue": "gw_Services_W1_Vpn",
      "metadata": { "description": "The gateway name that matches the source VNET." }
    },
    "ConnectionNamecnct141": {
      "type": "string",
      "defaultValue": "Vnet2Vnet_mac_slg_Services_To_Services_W2",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct141": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "LocalNamecnct141": {
      "type": "string",
      "defaultValue": "Services_W2",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "remoteGWNamecnct141": {
      "type": "string",
      "defaultValue": "gw_Services_W2_Vpn",
      "metadata": { "description": "Name for the remote VNET for a VNET to VNET connection" }
    },
    "localGWIPcnct141": {
      "type": "string",
      "defaultValue": "1.1.1.9",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct141": {
      "type": "array",
      "defaultValue": [ "10.128.120.0/21" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct141": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct141": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct141": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct141": {
      "type": "string",
      "defaultValue": "730f26b5-ebf5-4518-999f-0b4eb0cdc8f9",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct141": {
      "type": "string",
      "defaultValue": "rg_vnet_services_w2",
      "metadata": { "description": "The resource group for the remote subscriptions VNET gateway." }
    },
    "rmtConnectionNamecnct141": {
      "type": "string",
      "defaultValue": "Vnet2Vnet_mac_slg_Services_To_Services_W1",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct141": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": { "description": "The name of the remote location." }
    },
    "GWNamecnct141": {
      "type": "string",
      "defaultValue": "gw_Services_W1_Vpn",
      "metadata": { "description": "The gateway name that matches the source VNET." }
    },
    "ConnectionNamecnct142": {
      "type": "string",
      "defaultValue": "IPSec_slgmac_W1_Services_To_TX_Services",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct142": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "LocalNamecnct142": {
      "type": "string",
      "defaultValue": "Services_TX",
      "metadata": { "description": "Name for the destination connection between an Azure VNet and another network" }
    },
    "localGWIPcnct142": {
      "type": "string",
      "defaultValue": "52.183.93.252",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "LocalIPPrefixcnct142": {
      "type": "array",
      "defaultValue": [ "10.128.184.0/21" ],
      "metadata": { "description": "An array of Local IP address prefixes that this gateway will route traffic to." }
    },
    "connectionType1cnct142": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "sharedKeycnct142": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": { "description": "The shared key to negotiate the VPN connection.  KeyVault will hold this secret." }
    },
    "routingWeightcnct142": {
      "type": "int",
      "defaultValue": 10,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "GWNamecnct142": {
      "type": "string",
      "defaultValue": "gw_Services_W1_Vpn",
      "metadata": { "description": "The gateway name that matches the source VNET." }
    },

    "ConnectionNamecnct146": {
      "type": "string",
      "defaultValue": "Peering_mac_slg_Services_To_Prod_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct146": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct146": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct146": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct146": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct146": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct146": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct146": {
      "type": "string",
      "defaultValue": "vnet_prod_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct146": {
      "type": "string",
      "defaultValue": "ec1cea2e-92aa-45a7-89b0-d9fc40df2beb",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct146": {
      "type": "string",
      "defaultValue": "rg_vnet_prod_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct146": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct146": {
      "type": "string",
      "defaultValue": "westcentralus",
      "metadata": { "description": "The name of the remote location." }
    },
    "ConnectionNamecnct147": {
      "type": "string",
      "defaultValue": "Peering_mac_slg_Services_To_HBI_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct147": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct147": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct147": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct147": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct147": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct147": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct147": {
      "type": "string",
      "defaultValue": "vnet_hbi_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct147": {
      "type": "string",
      "defaultValue": "ce38c0ef-22f5-458d-b1f7-e3890e2471f2",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct147": {
      "type": "string",
      "defaultValue": "rg_vnet_hbi_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct147": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct147": {
      "type": "string",
      "defaultValue": "westcentralus",
      "metadata": { "description": "The name of the remote location." }
    },
    "ConnectionNamecnct148": {
      "type": "string",
      "defaultValue": "Peering_mac_slg_Services_To_PreProd_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct148": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct148": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct148": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct148": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct148": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct148": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct148": {
      "type": "string",
      "defaultValue": "vnet_preprod_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct148": {
      "type": "string",
      "defaultValue": "a7d928df-fc97-4f02-adae-3d7cdeb7c8cb",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct148": {
      "type": "string",
      "defaultValue": "rg_vnet_preprod_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct148": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct148": {
      "type": "string",
      "defaultValue": "westcentralus",
      "metadata": { "description": "The name of the remote location." }
    },
    "ConnectionNamecnct149": {
      "type": "string",
      "defaultValue": "Peering_mac_slg_Services_To_Storage_W1",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct149": {
      "type": "string",
      "defaultValue": "vnet_services_w1",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct149": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct149": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct149": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct149": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct149": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct149": {
      "type": "string",
      "defaultValue": "vnet_storage_w1",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct149": {
      "type": "string",
      "defaultValue": "6e5d19d2-a324-470a-b24f-57ac0d3221a1",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct149": {
      "type": "string",
      "defaultValue": "rg_vnet_storage_w1",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct149": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct149": {
      "type": "string",
      "defaultValue": "westcentralus",
      "metadata": { "description": "The name of the remote location." }
    }




  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet799Name'))]",
    "subnet700Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet700Name'))]",
    "subnet701Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet701Name'))]",
    "subnet702Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet702Name'))]",
    "subnet703Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet703Name'))]"
  },
  "resources": [
    /*go to the Metadata spreadsheet, NSGRules tab, filter on VNET 104
    Select the Resources that are grouped by color*/

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet600NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "600_NSG_Services_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet625NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "625_NSG_LB_Services_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet650NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "650_NSG_DMZ_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet655NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "655_NSG_LB_DMZ_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet660NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "660_NSG_User_Tier0_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet661NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "661_NSG_User_Tier1_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet662NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "662_NSG_User_Tier2_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet680NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "680_NSG_CSR_InsideTest_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet681NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "681_NSG_CSR_OutsideTest_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet682NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "682_NSG_FW_IntTest_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet683NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "683_NSG_FW_ExtTest_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet701NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "701_NSG_CSR_In_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet700NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "700_NSG_CSR_Out_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet702NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "702_NSG_CSR_Tunnel_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet703NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "703_NSG_CSR_HA_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet710NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "710_NSG_IntASA_Mgnt_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet711NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "711_NSG_IntASA_In_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet712NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "712_NSG_IntASA_Out_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet713NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "713_NSG_IntASA_DMZ_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet715NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "715_NSG_IntLB_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet750NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "750_NSG_ExtASA_Mgnt_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP500.Inbound.Allow",
            "properties": {
              "description": "UDP500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP4500.Inbound.Allow",
            "properties": {
              "description": "UDP4500.Inbound.Allow",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "4500",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet751NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "751_NSG_ExtASA_In_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet752NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "752_NSG_ExtASA_Out_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet753NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "753_NSG_ExtASA_DMZ_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet755NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "755_NSG_ExtLB_W1" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },


    /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET104
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnetAddressPrefix')]" ] },
        "subnets": [
          {
            "name": "[parameters('subnet600name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet600prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet600NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet625name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet625prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet625NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet680name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet680prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet680NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet682name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet682prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet682NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet681name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet681prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet681NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet683name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet683prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet683NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet650name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet650prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet650NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet655name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet655prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet655NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet660name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet660prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet660NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet661name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet661prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet661NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet662name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet662prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet662NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet700name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet700prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet701name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet701prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet702name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet702prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet703name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet703prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet710name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet710prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet711name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet711prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet712name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet712prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet713name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet713prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet715name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet715prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet750name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet750prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet751name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet751prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet752name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet752prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet753name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet753prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet755name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet755prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet799name')]",
            "properties": { "addressPrefix": "[parameters('subnet799prefix')]" }
          }
        ],

        "resources": [
          /*Go to the Connection tab of the Metadata spreadsheet and filter on VNET 104
          select the Resources for Peering and past them below (middle column) */
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct146')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct146'), '/resourceGroups/', parameters('rmtRGNamecnct146'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct146'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct146'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct146')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct146')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct146')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct146')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct146'), '/resourceGroups/', parameters('rmtRGNamecnct146'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct146'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct147')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct147'), '/resourceGroups/', parameters('rmtRGNamecnct147'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct147'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct147'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct147')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct147')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct147')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct147')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct147'), '/resourceGroups/', parameters('rmtRGNamecnct147'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct147'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct148')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct148'), '/resourceGroups/', parameters('rmtRGNamecnct148'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct148'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct148'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct148')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct148')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct148')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct148')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct148'), '/resourceGroups/', parameters('rmtRGNamecnct148'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct148'))]" }
            }
          },
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct149')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct149'), '/resourceGroups/', parameters('rmtRGNamecnct149'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct149'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct149'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct149')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct149')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct149')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct149')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct149'), '/resourceGroups/', parameters('rmtRGNamecnct149'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct149'))]" }
            }
          }

        ],

        "dhcpOptions": { "dnsServers": [ "10.128.59.36" ] },


        "dependsOn": [
          /*Using the metadata template on the Subnet Tab, filter to VNET104 and select
          the columns with DependsOn and grouped by color*/
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet600NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet625NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet680NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet682NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet681NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet683NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet650NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet655NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet660NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet661NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet662NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet700NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet701NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet702NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet703NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet710NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet711NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet712NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet713NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet715NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet750NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet751NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet752NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet753NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet755NSG'))]"


        ]

      }
    },
    /*using the metadata spreadsheet goto the gateway tab filter on VNET104
    and copy the gateway information here*/

    /*Don't need ER for the Demo environment
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('PublicIPNamegw104')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('GatewayNamegw104')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/publicIPAddresses/', parameters('PublicIPNamegw104'))]", "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('PublicIPNamegw104'))]" }
            },
            "name": "default"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySKUgw104')]",
          "tier": "[parameters('gatewaySKUgw104')]"
        },
        "gatewayType": "[parameters('GatewayTypegw104')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/expressRouteCircuits",
      "name": "[parameters('erCircuitName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[concat(parameters('erSKUTier'),'_', parameters('erSKUFamily'))]",
        "tier": "[parameters('erSKUTier')]",
        "family": "[parameters('erSKUFamily')]"
      },
      "properties": {
        "serviceProviderProperties": {
          "serviceProviderName": "[parameters('erSPName')]",
          "peeringLocation": "[parameters('erPeeringLocation')]",
          "bandwidthInMbps": "[parameters('erBandwidth')]"
        }
      }
    },
    */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('PublicIPNamegw1042')]",
      "location": "[resourceGroup().location]",
      "properties": { "publicIPAllocationMethod": "Dynamic" }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('GatewayNamegw1042')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('PublicIPNamegw1042'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        /*I can't figure out a way to add this dependency programatically
        "[Concat('Microsoft.Network/virtualnetworkgateways/', parameters('GatewayNamegw104'))]"
*/
      ],

      "properties": {
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[variables('subnet799Ref')]" },
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('PublicIPNamegw1042'))]" }
            }
          }
        ],
        "gatewayType": "[parameters('GatewayTypegw1042')]",
        "vpnType": "[parameters('VPNTypegw1042')]",
        "enableBGP": "[parameters('BGPgw1042')]",
        "sku": {
          "name": "[parameters('gatewaySKUgw1042')]",
          "tier": "[parameters('gatewaySKUgw1042')]"
        }
      }
    },


    /*using the metadata spreadsheet goto the Connection tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('LocalNamecnct140')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": "[parameters('LocalIPPrefixcnct140')]"
        },
        "gatewayIpAddress": "[parameters('localGWIPcnct140')]"
      }
    },
    
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct140')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct140'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('LocalNamecnct140'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct140'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalNamecnct140'))]" },
        "sharedKey": "[parameters('sharedKeycnct140')]",
        "connectionType": "[parameters('connectionType1cnct140')]",
        "routingWeight": "[parameters('routingWeightcnct140')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct141')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct141'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct141'))]" },
        "virtualNetworkGateway2": { "id": "[concat('/subscriptions/',parameters('rmtSubIDcnct141'),'/resourceGroups/',parameters('rmtRGNamecnct141'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('remoteGWNamecnct141'))]" },
        "sharedKey": "[parameters('sharedKeycnct141')]",
        "connectionType": "[parameters('connectionType1cnct141')]",
        "routingWeight": "[parameters('routingWeightcnct141')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('rmtConnectionNamecnct141')]",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('rmtLocationcnct141')]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct141'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[concat('/subscriptions/',parameters('rmtSubIDcnct141'),'/resourceGroups/',parameters('rmtRGNamecnct141'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('remoteGWNamecnct141'))]" },
        "virtualNetworkGateway2": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct141'))]" },
        "sharedKey": "[parameters('sharedKeycnct141')]",
        "connectionType": "[parameters('connectionType1cnct141')]",
        "routingWeight": "[parameters('routingWeightcnct141')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('LocalNamecnct142')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": { "addressPrefixes": "[parameters('LocalIPPrefixcnct142')]" },
        "gatewayIpAddress": "[parameters('localGWIPcnct142')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('ConnectionNamecnct142')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('GWNamecnct142'))]", "[concat('Microsoft.Network/localNetworkGateways/', parameters('LocalNamecnct142'))]" ],
      "properties": {
        "virtualNetworkGateway1": { "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('GWNamecnct142'))]" },
        "localNetworkGateway2": { "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalNamecnct142'))]" },
        "sharedKey": "[parameters('sharedKeycnct142')]",
        "connectionType": "[parameters('connectionType1cnct142')]",
        "routingWeight": "[parameters('routingWeightcnct142')]"
      }
    }

  ],
  "outputs": {

  }
}
