{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commentLocation": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters for the deployment template filter on VNET303"
    },
    "commentVNET": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from VNET tab, filter on VNET303"
    },
    "commentSubnet": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from subnet tab, filter on VNET303"
    },
    "commentConnections": {
      "type": "string",
      "defaultValue": "using the metadata template to populate the parameters from Connection tab, filter on VNET303"
    },
    "commentGateway": {
      "type": "string",
      "defaultValue": "\"using the metadata template to populate the parameters from Gateway tab, filter on VNET3023"
    },
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/site1",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },

    /*
    In the metadata spreadsheet, on the VNET tab, filter on VNET203
      select the columns with Template in the name and grouped by color.
    */
    "locationName": {
      "type": "string",
      "defaultValue": "westus2"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg_vnet_storage_w2"
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet_storage_w2",
      "metadata": { "description": "AzureFoundation VNET Name for virtual data center subscription in a specific data center." }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.128.112.0/21",
      "metadata": { "description": "AzureFoundation VNET Address Prefix, the range of addresses for a specific data center." }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [ "10.128.59.36" ],
      "metadata": { "description": "AzureFoundation Domain Controller DNS server" }
    },


    /*
    In the metadata spreadsheet, on the Subnet tab, filter on VNET203
      select the columns with Template in the name and grouped by color.
    */
    "subnet500Prefix": {
      "type": "string",
      "defaultValue": "10.128.112.0/24",
      "metadata": { "description": "Storage appliances" }
    },
    "subnet500Name": {
      "type": "string",
      "defaultValue": "s500_Storage_Storage_slgmac_W2",
      "metadata": { "description": "Storage appliances" }
    },
    "subnet500NSG": {
      "type": "string",
      "defaultValue": "500_NSG_Storage",
      "metadata": { "description": "NSG: Storage appliances" }
    },
    "subnet505Prefix": {
      "type": "string",
      "defaultValue": "10.128.113.0/24",
      "metadata": { "description": "Loadbalanced Storage appliances" }
    },
    "subnet505Name": {
      "type": "string",
      "defaultValue": "s505_LB_Storage_Storage_slgmac_W2",
      "metadata": { "description": "Loadbalanced Storage appliances" }
    },
    "subnet505NSG": {
      "type": "string",
      "defaultValue": "505_NSG_LB_Storage",
      "metadata": { "description": "NSG: Loadbalanced Storage appliances" }
    },
    "subnet560Prefix": {
      "type": "string",
      "defaultValue": "10.128.114.0/25",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet560Name": {
      "type": "string",
      "defaultValue": "s560_User_Tier0_Storage_slgmac_W2",
      "metadata": { "description": "Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet560NSG": {
      "type": "string",
      "defaultValue": "560_NSG_User_Tier0",
      "metadata": { "description": "NSG: Tier 0 - Direct Control of enterprise identities in the environment. Tier 0 includes accounts, groups, and other assets that have direct or indirect administrative control of the Active Directory forest, domains, or domain controllers, and all the assets in it. The security sensitivity of all Tier 0 assets is equivalent as they are all effectively in control of each other" }
    },
    "subnet561Prefix": {
      "type": "string",
      "defaultValue": "10.128.114.128/25",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet561Name": {
      "type": "string",
      "defaultValue": "s561_User_Tier1_Storage_slgmac_W2",
      "metadata": { "description": "Tier 1 administrator - manage enterprise servers, services, and applications" }
    },
    "subnet561NSG": {
      "type": "string",
      "defaultValue": "561_NSG_User_Tier1",
      "metadata": { "description": "NSG: Tier 1 administrator - manage enterprise servers, services, and applications" }
    },

    /*
    In the metadata spreadsheet, on the Connection tab, filter on VNET203
      select the columns with Template in the name and grouped by color.
    */
    "ConnectionNamecnct203": {
      "type": "string",
      "defaultValue": "Peering_mac_slg_Storage_To_Services_W2",
      "metadata": { "description": "Arbitrary name for the new connection between an Azure VNet and another network" }
    },
    "vnetNamecnct203": {
      "type": "string",
      "defaultValue": "vnet_storage_w2",
      "metadata": { "description": "Azure VNET of the current location" }
    },
    "connectionType1cnct203": {
      "type": "string",
      "defaultValue": "Peering",
      "metadata": { "description": "The type of connection. For connecting to ExpressRoute circuits, the connectionType must be of type ExpressRoute. Other types are IPsec and Vnet2Vnet." }
    },
    "allowVNETAccesscnct203": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowFwdAccesscnct203": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "allowGWAccesscnct203": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "useRemoteGatewaycnct203": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "peerVNETNamecnct203": {
      "type": "string",
      "defaultValue": "vnet_services_w2",
      "metadata": { "description": "The routing weight tells the protocol how expensive it is to route on this gateway." }
    },
    "rmtSubIDcnct203": {
      "type": "string",
      "defaultValue": "730f26b5-ebf5-4518-999f-0b4eb0cdc8f9",
      "metadata": { "description": "The subscription ID of the peer VNET." }
    },
    "rmtRGNamecnct203": {
      "type": "string",
      "defaultValue": "rg_vnet_services_w2",
      "metadata": { "description": "The resource group for the remote subscription VNET." }
    },
    "rmtConnectionNamecnct203": {
      "type": "string",
      "defaultValue": "",
      "metadata": { "description": "The name of the remote connection." }
    },
    "rmtLocationcnct203": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": { "description": "The name of the remote location." }
    },

  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
  },

  "resources": [
    /*
    In the metadata spreadsheet, on the NSGRules tab, filter on VNET203
      select the columns with Resource in the name and grouped by color.
    */
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet500NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "500_NSG_Storage_W2" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet505NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "505_NSG_LB_Storage_W2" },
      "properties": {
        "securityRules": [
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet560NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "560_NSG_User_Tier0_W2" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('subnet561NSG')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "561_NSG_User_Tier1_W2" },
      "properties": {
        "securityRules": [
          {
            "name": "SSH.Inbound.Allow",
            "properties": {
              "description": "SSH.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP.Inbound.Allow",
            "properties": {
              "description": "RDP.Inbound.Allow",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "All_Internet.Inbound.Deny",
            "properties": {
              "description": "All_Internet.Inbound.Deny",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 150,
              "direction": "Inbound"
            }
          }
        ]
      }
    },


    /*
    In the metadata spreadsheet, on the Subnets tab, filter on VNET203
      select the columns with Resource in the name and grouped by color.
    */
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": { "displayName": "AzureFoundation VNet Definition" },
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[parameters('vnetAddressPrefix')]" ] },
        "subnets": [
          {
            "name": "[parameters('subnet500name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet500prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet500NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet505name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet505prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet505NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet560name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet560prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet560NSG'))]" }
            }
          },
          {
            "name": "[parameters('subnet561name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet561prefix')]",
              "networkSecurityGroup": { "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('subnet561NSG'))]" }
            }
          }
        ],


        "resoures": [
          /*
    In the metadata spreadsheet, on the Connections tab, filter on VNET203
      select the columns with Resource in the name and grouped by color.
    */
          {
            "apiVersion": "2016-06-01",
            "type": "virtualNetworkPeerings",
            "name": "[parameters('ConnectionNamecnct203')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('/subscriptions/', parameters('rmtSubIDcnct203'), '/resourceGroups/', parameters('rmtRGNamecnct203'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct203'))]", "[concat('Microsoft.Networks/virtualNetworks/',parameters('vnetNamecnct203'))]" ],
            "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
            "properties": {
              "allowVirtualNetworkAccess": "[parameters('allowVNETAccesscnct203')]",
              "allowForwardedTraffic": "[parameters('allowFwdAccesscnct203')]",
              "allowGatewayTransit": "[parameters('allowGWAccesscnct203')]",
              "useRemoteGateways": "[parameters('allowVNETAccesscnct203')]",
              "remoteVirtualNetwork": { "id": "[concat('/subscriptions/', parameters('rmtSubIDcnct203'), '/resourceGroups/', parameters('rmtRGNamecnct203'),'/providers/Microsoft.Network/virtualNetworks/',parameters('peerVNETNamecnct203'))]" }
            }
          }

        ],
        "dhcpOptions": { "dnsServers": [ "10.128.59.36" ] },
        "dependsOn": [
          /*Using the metadata template on the Subnet Tab, filter to VNET103 and select
          the columns with DependsOn and grouped by color*/
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet500NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet505NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet560NSG'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('subnet561NSG'))]"

        ]

      }
    }

  ],



  "outputs": {
  }

}
